package activity.processdefinition;

import java.io.InputStream;
import java.util.List;
import java.util.zip.ZipInputStream;

import org.activiti.engine.ProcessEngine;
import org.activiti.engine.ProcessEngines;
import org.activiti.engine.repository.Deployment;
import org.junit.Test;

public class ProcessDefinition {
	ProcessEngine processEngine = ProcessEngines.getDefaultProcessEngine();
	/**
	 * 部署流程定义
	 * @author guoxi 从classpath
	 */
	@Test
	public void deploymentProcessDefinition_classpath() {
		System.out.println("processEngine:"+processEngine);
		
		 Deployment deploy = processEngine.getRepositoryService()/**与流程对象和部署定义相关的service*/
		 			  .createDeployment()/**创建一个部署对象*/
		 			  .name("流程定义")/**添加部署名称*/
		 			  .addClasspathResource("diagrams/helloworld.bpmn")/**从classpath的资源加载，一次只能加载一个文件*/
		 			  .addClasspathResource("diagrams/helloworld.png")
		 			  .deploy();
		 System.out.println("部署deploy:id:"+deploy.getId());
		 System.out.println("部署deploy:name:"+deploy.getName());
		
	}
	
	/**
	 * 部署流程定义
	 * @author guoxi 从zip
	 */
	@Test
	public void deploymentProcessDefinition_zip() {
		System.out.println("processEngine:"+processEngine);
		
		InputStream in=this.getClass().getClassLoader().getResourceAsStream("diagrams/activity.zip");
		ZipInputStream zipInputStream=new ZipInputStream(in);
		
		 Deployment deploy = processEngine.getRepositoryService()/**与流程对象和部署定义相关的service*/
		 			  .createDeployment()/**创建一个部署对象*/
		 			  .name("流程定义")/**添加部署名称*/
		 			  .addZipInputStream(zipInputStream)/**指定zip 的输入流*/
		 			  .deploy();
		 System.out.println("部署deploy:id:"+deploy.getId());
		 System.out.println("部署deploy:name:"+deploy.getName());
		
	}
	/**查询流程定义*/
	@Test
	public void findProcessDefinetion(){
		String deploymentId="";
		String processDefinitionId="";
		String processDefinitionKey="";
		List<org.activiti.engine.repository.ProcessDefinition> list = processEngine.getRepositoryService()//与流程定义部署相关service
					 .createProcessDefinitionQuery()
					 //指定查询条件
//					 .deploymentId(deploymentId)//使用部署对象id 查询
//					 .processDefinitionId(processDefinitionId)//使用流程定义id查询
//					 .processDefinitionKey(processDefinitionKey)//使用流程定义key查询
					 /**排序*/
//					 .orderByProcessDefinitionVersion().asc();
//					 .orderByProcessDefinitionName().desc();
					 /**返回结果集*/
					 .list();//返回结果集，封装流程定义
//					 .singleResult();
//					 .count();
//					 .listPage(firstResult, maxResults);
					 if (list!=null&&list.size()!=0) {
						for (org.activiti.engine.repository.ProcessDefinition processDefinition : list) {
							System.out.println("processDefinition:"+processDefinition.getId());
							System.out.println("processDefinition:"+processDefinition.getName());
							System.out.println("processDefinition:"+processDefinition.getKey());
							System.out.println("processDefinition:"+processDefinition.getVersion());
							System.out.println("processDefinition:"+processDefinition.getResourceName());
							System.out.println("processDefinition:"+processDefinition.getDiagramResourceName());
							System.out.println("processDefinition:"+processDefinition.getDeploymentId());
							
							
						}
					}
					 
		
		
		}
	}
