package activity.variables;

import java.io.InputStream;

import org.activiti.engine.ProcessEngine;
import org.activiti.engine.ProcessEngineConfiguration;
import org.activiti.engine.repository.Deployment;
import org.activiti.engine.runtime.ProcessInstance;
import org.junit.Test;
public class ProcessVariables {
	
//	ProcessEngine processEngine=ProcessEngines.getDefaultProcessEngine();
	ProcessEngine processEngine=ProcessEngineConfiguration
			.createProcessEngineConfigurationFromResource("activiti.cfg.xml").buildProcessEngine();
	/**
	 * 部署流程定义 inputstream
	 * @author guoxi 从classpath
	 */
	@Test
	public void deploymentProcessDefinition_classpath() {
		 Deployment deploy = processEngine.getRepositoryService()/**与流程对象和部署定义相关的service*/
		 			  .createDeployment()/**创建一个部署对象*/
		 			  .name("流程定义")/**添加部署名称*/
		 			  .addClasspathResource("diagrams/ProcessVariables.bpmn")/**从classpath的资源加载，一次只能加载一个文件*/
		 			  .addClasspathResource("diagrams/ProcessVariables.png")
		 			  .deploy();
		 System.out.println("部署deploy:id:"+deploy.getId());
		 System.out.println("部署deploy:name:"+deploy.getName());
	}
	/**
	 * 启动流程实例
	 * @author guoxi 
	 */
	@Test
	public  void startDeploymentInstance() {
		//流程定义的key
		String processDefinitionKey="ProcessVariables";
		ProcessInstance processInstance = processEngine.getRuntimeService()/**与正在执行的流程实例和执行对象相关的service*/
		/**使用流程定义的key启动流程实例,
		 * key对应helloworld.bpmn文件中 process id属性值，
		 * 使用key启动，默认是按照最新版本的流程定义启动*/
					  .startProcessInstanceByKey(processDefinitionKey);
		System.out.println("流程实例："+processInstance.getId());/**流程实例id*/
		System.out.println("流程定义："+processInstance.getProcessDefinitionId());/**流程定义id*/
	}
	/**设置流程变量*/
	@Test
	public void setVariable(){
		//从classpath下加载指定名称的文件
		InputStream inputStream = this.getClass().getClassLoader().getResourceAsStream("diagrams/ProcessVariables.bpmn");
		InputStream inputStream2 = this.getClass().getResourceAsStream("");
		InputStream inputStream3 = this.getClass().getResourceAsStream("");
	}
	/**获取流程变量*/
}
